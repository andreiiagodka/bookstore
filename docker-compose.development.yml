version: '3.1'

volumes:
  redis:
  postgres:

services:
  postgres:
    image: postgres:10
    ports:
      - 5428:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3m

  in_memory_store:
    image: redis:4-alpine
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 3m

  server_app: &server_app
    build: .
    command: bundle exec rails server --binding 0.0.0.0
    entrypoint: "./docker-entrypoint.sh"
    tty: true
    stdin_open: true
    environment:
      RAILS_ENV: development
      DB_HOST: postgres
      REDIS_DB: "redis://in_memory_store:6379"
      SECRET_KEY_BASE: STUB
      DEVISE_SECRET_KEY: STUB
    depends_on:
      - postgres
      - in_memory_store
    ports:
      - 3000:3000
    volumes:
      - .:/home/app_owner/bookstore
      - /home/app_owner/bookstore/vendor/bundle
      - /home/app_owner/bookstore/public/assets
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health_check"]
      interval: 3m

  server_worker_app:
    <<: *server_app
    command: bundle exec sidekiq -C config/sidekiq.yml
    entrypoint: ''
    ports: []
    depends_on:
      - postgres
      - server_app
      - in_memory_store
    healthcheck:
      test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]
      interval: 3m
